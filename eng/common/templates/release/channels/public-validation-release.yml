stages:
- stage: PVR_Publish
  dependsOn: validate
  displayName: Validation Channel
  jobs:
  - job: setupMaestroVars
    displayName: Setup Maestro Vars
    pool:
      name: Hosted Windows 2019 with VS2019
    steps:
      - task: DownloadBuildArtifacts@0
        displayName: Download Release Configs
        inputs:
          buildType: current
          artifactName: 'ReleaseConfigs'

      - task: powershell@1
        name: setReleaseVars
        displayName: Set Release Configs Vars
        inputs:
          scriptType: inlineScript
          inlineScript: |
            $BarId = Get-Content "$(Build.StagingDirectory)/ReleaseConfigs/BARBuildId.txt" 
            Write-Host "##vso[task.setvariable variable=BARBuildId;isOutput=true]$BarId"
            
            Get-Content "$(Build.StagingDirectory)/ReleaseConfigs/Channels.txt" | ForEach-Object { $Channels += "$_ ," }
            Write-Host "##vso[task.setvariable variable=InitialChannels;isOutput=true]$Channels"

  - job:
    displayName: Publish to Static Feed
    dependsOn: setupMaestroVars
    condition: contains(dependencies.setupMaestroVars.outputs['setReleaseVars.InitialChannels'], 12)
    variables:
      BARBuildId: $[ dependencies.setupMaestroVars.outputs['setReleaseVars.BARBuildId'] ]
    pool:
      name: Hosted Windows 2019 with VS2019
    steps:
      - task: DownloadBuildArtifacts@0
        displayName: Download Package Artifacts
        inputs:
          buildType: current
          artifactName: 'PackageArtifacts'

      - task: DownloadBuildArtifacts@0
        displayName: Download Blob Artifacts
        inputs:
          buildType: current
          artifactName: 'BlobArtifacts'

      - task: DownloadBuildArtifacts@0
        displayName: Download Asset Manifests
        inputs:
          buildType: current
          artifactName: 'AssetManifests'

      - task: PowerShell@2
        displayName: Publish
        inputs:
          filePath: eng\common\sdk-task.ps1
          arguments: -task PublishToPackageFeed -restore -msbuildEngine dotnet
            /p:AccountKeyToStaticFeed=$(dotnetfeed-storage-access-key-1)
            /p:BARBuildId=$(BARBuildId)
            /p:MaestroApiEndpoint=$(MaestroApiEndpoint)
            /p:BuildAssetRegistryToken=$(MaestroApiPassword)
            /p:ManifestsBasePath=$(Build.ArtifactStagingDirectory)\AssetManifests\
            /p:BlobBasePath=$(Build.ArtifactStagingDirectory)\BlobArtifacts\
            /p:PackageBasePath=$(Build.ArtifactStagingDirectory)\PackageArtifacts\
            /p:ArtifactsCategory=.NETCoreValidation
            /p:OverrideAssetsWithSameName=true
            /p:PassIfExistingItemIdentical=true
            /p:Configuration=Release


- stage: PVR_PublishValidation
  displayName: Publish Validation
  jobs:
  - job:
    displayName: Gather Drop
    pool:
      name: Hosted Windows 2019 with VS2019
    steps:
      - task: DownloadBuildArtifacts@0
        displayName: Download Release Configs
        inputs:
          buildType: current
          artifactName: 'ReleaseConfigs'

      - task: powershell@1
        displayName: Set Release Configs Vars
        inputs:
          scriptType: inlineScript
          inlineScript: |
            $BarId = Get-Content "$(Build.StagingDirectory)/ReleaseConfigs/BARBuildId.txt" 
            Write-Host "##vso[task.setvariable variable=BARBuildId;]$BarId"

      - task: PowerShell@2
        displayName: Setup Darc CLI
        inputs:
          targetType: filePath
          filePath: '$(Build.SourcesDirectory)/eng/common/darc-init.ps1'

      - powershell: 'darc gather-drop --id $(BARBuildId) --output-dir $(Agent.BuildDirectory)/Temp/Drop/ --bar-uri $(MaestroApiEndpoint) --password $(MaestroApiPassword)'
        displayName: Run Darc gather-drop
        continueOnError: true
